package InterfaceLesson;

public class InterfaceLesson {
    /*
    Простой пример интерфейса из повседневной жизни — пульт от телевизора.

    Чтобы определить интерфейс, используется ключевое слово interface. Например:

        interface Printable {
             void print();
        }
    Интерфейс может определять константы и методы, которые могут иметь, а могут и не иметь реализации.
Методы без реализации похожи на абстрактные методы абстрактных классов.

    Все методы интерфейса не имеют модификаторов доступа, но фактически по умолчанию доступ public,
так как цель интерфейса - определение функционала для реализации его классом.
Поэтому весь функционал должен быть открыт для реализации.

    Если класс применяет интерфейс, то он должен реализовать все методы интерфейс
    Если класс не реализует какие-то методы интерфейса, то такой класс должен быть определен как абстрактный,
    а его неабстрактные классы-наследники затем должны будут реализовать эти методы.

    Важно отметить, что лямбда-выражения могут использоваться только с функциональным интерфейсом
    (имеется в виду интерфейс только с одним методом)

    Чтобы класс применил интерфейс, надо использовать ключевое слово implements:

    Интерфейс:
Может иметь только конечные статические переменные. Интерфейс никогда не может изменить свое собственное состояние.

Класс может реализовывать несколько интерфейсов.

Может быть реализован с помощью ключевого слова implements. Интерфейс может расширять другой интерфейс.

Для методов можно использовать только статические конечные поля, параметры или локальные переменные.

Только функциональные интерфейсы могут использовать функцию лямбда в Java.

Не может иметь конструктор.

Может иметь абстрактные методы.

Может иметь методы по умолчанию и статические (представлены в Java 8).

Может иметь частные методы с реализацией (представлено в Java 9).
     */
}
