package Core.OOP;

public class Oop {
    /*
    Каждый объект обладает тремя составляющими: идентичность (identity), состояние (state) и поведение (behaviour).
    Состояние объекта — это набор всех его полей и их значений.
    Поведение объекта — это набор всех методов класса объекта.
    Идентичность объекта — это то, что отличает один объект класса от другого объекта класса.
    С точки зрения Java именно по идентичности определяется метод equals.

    Принципы объектно-ориентированного программирования
    Абстракция.
    Абстракция означает использование простых вещей для описания чего-то сложного или выделение главных,
    наиболее значимых характеристик предмета и наоборот — отбрасывание второстепенных, незначительных.
    Инкапсуляция.
    Под инкапсуляцией подразумевается сокрытие полей и реализации (методов) внутри объекта с целью защиты данных от внешнего,
    бесконтрольного изменения со стороны других объектов.
    Доступ к данным (полям) предоставляется посредством публичных методов (геттеров/сеттеров).
    Наследование.
    Это особая функциональность в объектно-ориентированных языках программирования,
    которая позволяет описывать новые классы на основе уже существующих.
    При этом поля и методы класса-предка становятся доступны и классам-наследникам.
    Эта фича делает классы более чистыми и понятным за счет устранения дублирования программного кода.
    Полиморфизм.
    Этот принцип позволяет программистам использовать одни и те же термины для описания различного поведения,
    зависящего от контекста. Одной из форм полиморфизма в Java является переопределение метода,
    когда различные формы поведения определяются объектом, из которого этот метод был вызван.
    Другой формой полиморфизма является перегрузка метода,
    когда его поведение определяется набором передаваемых в метод аргументов.
     */
}
